#!/usr/bin/perl
use strict;
use warnings;
use Data::Printer;

my $dir = $ARGV[0];
$dir =~ s/\/$//;

opendir DFH, $dir;
my $files = [grep { /\.mp3$/ } readdir DFH ];

sub shellSafe {
    my $p = shift @_;
    $p =~ s/([^A-Za-z0-9.\/])/\\$1/g;
    return $p;
}

sub getID3 {
    my $path = shift @_;
    my $cmd = 'id3tool ' . shellSafe($path);
    my $id3 = { map { $_ =~ s/^\s+//; $_ =~ s/\s+$//; my @pts = split(/\:\s+/, $_, 2); $pts[0] => $pts[1]; } sort split(/\n/, `$cmd`) };
    if (! $id3->{'Song Title'}) {
        my $tt = $path;
        $tt =~ s/^.+\/([^\/]+)$/$1/;
        $tt =~ s/\d+(\s*-\s*)?//;
        $tt =~ s/\.mp3$//i;
        $id3->{'Song Title'} = $tt;
    }
    return $id3;
}

sub getMeta {
    my $path = shift @_;
    my $p = shellSafe($path);
    my $info = `ffmpeg -i $p 2>&1`;
    
    my $duration = 0;
    if ($info =~ m/Duration:\s*(?<dur>[^,]+),/gism) {
        my $dur = $+{dur};
        my ($hr, $mn, $sc) = split(/:/, $dur);
        $duration = ($hr * 60 * 60) + ($mn * 60) + $sc;
    }
    
    return $duration;
}

sub fmtOffset {
    my $off_sec = shift @_;
    if ($off_sec < 60) {
        return sprintf "0:%02d", (gmtime $off_sec)[0];
    } elsif ($off_sec < 60 * 60) {
        return sprintf "%d:%02d", (gmtime $off_sec)[1,0];
    } else {
        return sprintf "%d:%02d:%02d", (gmtime $off_sec)[2,1,0];
    }
}


my $tracks = [];

my $desc = [];
my $offset = 0;

my $num = 0;

foreach my $f (@$files) {
    $num++;
    my $path = $dir . '/' . $f;
    my $id3 = getID3($path);
    my $dur = getMeta($path);
    my $trk = {
        num => $num,
        path => $path,
        duration => $dur,
        id3 => $id3,
        offset => $offset,
        starts_at => fmtOffset($offset)
    };
    
    push @$tracks, $trk;
    $offset += $dur;
    
    push @$desc, "$trk->{num}. $trk->{id3}->{'Song Title'} ($trk->{starts_at})";
}

open(MFH, ">./output/album-description.txt") or die "Can't write description file: $!\n";
print MFH join("\n", @$desc);
close MFH;

my $cmd = '';

# merge MP3s
$cmd = "cat " . shellSafe($dir) . "/*.mp3 > ./output/merged.mp3";
print "$cmd\n";
`$cmd`;

# merged MP3s + JPEG -> video
$cmd = "ffmpeg -loop 1 -i " . shellSafe($dir) . "/cover.jpg -i ./output/merged.mp3 -shortest -c:v libx264 -c:a copy -y ./output/album-upload.mkv";
print "$cmd\n";
`$cmd`;

unlink './outout/merged.mp3';